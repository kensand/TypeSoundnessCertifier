Welcome to Abella 2.0.2
Abella < Specification "stlc_par_exc".
Reading specification "stlc_par_exc"

Abella < Theorem canonical_form_arrow : 
forall E T1 T2, {typeOf E (arrow T1 T2)} -> {value E} ->
  (exists Arg1 Arg2, E = abs Arg1 Arg2).

============================
 forall E T1 T2, {typeOf E (arrow T1 T2)} -> {value E} ->
   (exists Arg1 Arg2, E = abs Arg1 Arg2)

canonical_form_arrow < intros Main Value.

Variables: E T1 T2
Main : {typeOf E (arrow T1 T2)}
Value : {value E}
============================
 exists Arg1 Arg2, E = abs Arg1 Arg2

canonical_form_arrow < case Main.
Subgoal 1:

Variables: T1 T2 R
Value : {value (abs R T1)}
H1 : {typeOf n1 T1 |- typeOf (R n1) T2}
============================
 exists Arg1 Arg2, abs R T1 = abs Arg1 Arg2

Subgoal 2 is:
 exists Arg1 Arg2, app E1 E2 = abs Arg1 Arg2

Subgoal 3 is:
 exists Arg1 Arg2, try E1 E2 = abs Arg1 Arg2

Subgoal 4 is:
 exists Arg1 Arg2, raise E1 = abs Arg1 Arg2

canonical_form_arrow < case Value.
Subgoal 1:

Variables: T1 T2 R
H1 : {typeOf n1 T1 |- typeOf (R n1) T2}
============================
 exists Arg1 Arg2, abs R T1 = abs Arg1 Arg2

Subgoal 2 is:
 exists Arg1 Arg2, app E1 E2 = abs Arg1 Arg2

Subgoal 3 is:
 exists Arg1 Arg2, try E1 E2 = abs Arg1 Arg2

Subgoal 4 is:
 exists Arg1 Arg2, raise E1 = abs Arg1 Arg2

canonical_form_arrow < search.
Subgoal 2:

Variables: T1 T2 T3 E2 E1
Value : {value (app E1 E2)}
H1 : {typeOf E1 (arrow T3 (arrow T1 T2))}
H2 : {typeOf E2 T3}
============================
 exists Arg1 Arg2, app E1 E2 = abs Arg1 Arg2

Subgoal 3 is:
 exists Arg1 Arg2, try E1 E2 = abs Arg1 Arg2

Subgoal 4 is:
 exists Arg1 Arg2, raise E1 = abs Arg1 Arg2

canonical_form_arrow < case Value.
Subgoal 3:

Variables: T1 T2 E2 E1
Value : {value (try E1 E2)}
H1 : {typeOf E1 (arrow T1 T2)}
H2 : {typeOf E2 (arrow excType (arrow T1 T2))}
============================
 exists Arg1 Arg2, try E1 E2 = abs Arg1 Arg2

Subgoal 4 is:
 exists Arg1 Arg2, raise E1 = abs Arg1 Arg2

canonical_form_arrow < case Value.
Subgoal 4:

Variables: T1 T2 E1
Value : {value (raise E1)}
H1 : {typeOf E1 excType}
============================
 exists Arg1 Arg2, raise E1 = abs Arg1 Arg2

canonical_form_arrow < case Value.
Proof completed.

Abella < Theorem canonical_form_excType : 
forall E, {typeOf E excType} -> {value E} -> E = excValue.

============================
 forall E, {typeOf E excType} -> {value E} -> E = excValue

canonical_form_excType < intros Main Value.

Variables: E
Main : {typeOf E excType}
Value : {value E}
============================
 E = excValue

canonical_form_excType < case Main.
Subgoal 1:

Value : {value excValue}
============================
 excValue = excValue

Subgoal 2 is:
 app E1 E2 = excValue

Subgoal 3 is:
 try E1 E2 = excValue

Subgoal 4 is:
 raise E1 = excValue

canonical_form_excType < case Value.
Subgoal 1:

============================
 excValue = excValue

Subgoal 2 is:
 app E1 E2 = excValue

Subgoal 3 is:
 try E1 E2 = excValue

Subgoal 4 is:
 raise E1 = excValue

canonical_form_excType < search.
Subgoal 2:

Variables: T1 E2 E1
Value : {value (app E1 E2)}
H1 : {typeOf E1 (arrow T1 excType)}
H2 : {typeOf E2 T1}
============================
 app E1 E2 = excValue

Subgoal 3 is:
 try E1 E2 = excValue

Subgoal 4 is:
 raise E1 = excValue

canonical_form_excType < case Value.
Subgoal 3:

Variables: E2 E1
Value : {value (try E1 E2)}
H1 : {typeOf E1 excType}
H2 : {typeOf E2 (arrow excType excType)}
============================
 try E1 E2 = excValue

Subgoal 4 is:
 raise E1 = excValue

canonical_form_excType < case Value.
Subgoal 4:

Variables: E1
Value : {value (raise E1)}
H1 : {typeOf E1 excType}
============================
 raise E1 = excValue

canonical_form_excType < case Value.
Proof completed.

Abella < Define progresses : term -> prop by 
progresses E := {value E};
progresses E := {error E};
progresses E := exists E', {step E E'}.

Abella < Theorem progress_abs : 
forall R1 T2 T, {typeOf (abs R1 T2) T} -> progresses (abs R1 T2).

============================
 forall R1 T2 T, {typeOf (abs R1 T2) T} -> progresses (abs R1 T2)

progress_abs < search.
Proof completed.

Abella < Theorem progress_app : 
forall E1 E2 T, {typeOf (app E1 E2) T} -> progresses E1 ->
  progresses (app E1 E2).

============================
 forall E1 E2 T, {typeOf (app E1 E2) T} -> progresses E1 ->
   progresses (app E1 E2)

progress_app < intros Main PrgsE1.

Variables: E1 E2 T
Main : {typeOf (app E1 E2) T}
PrgsE1 : progresses E1
============================
 progresses (app E1 E2)

progress_app < case TypeOfE1 : Main.

Variables: E1 E2 T T1
PrgsE1 : progresses E1
TypeOfE1 : {typeOf E1 (arrow T1 T)}
TypeOfE2 : {typeOf E2 T1}
============================
 progresses (app E1 E2)

progress_app < case ProgressClause : PrgsE1.
Subgoal 1:

Variables: E1 E2 T T1
TypeOfE1 : {typeOf E1 (arrow T1 T)}
TypeOfE2 : {typeOf E2 T1}
ProgressClause : {value E1}
============================
 progresses (app E1 E2)

Subgoal 2 is:
 progresses (app E1 E2)

Subgoal 3 is:
 progresses (app E1 E2)

progress_app < apply Canonical : canonical_form_arrow to TypeOfE1 ProgressClause.
Subgoal 1:

Variables: E2 T T1 Arg1 Arg2
TypeOfE1 : {typeOf (abs Arg1 Arg2) (arrow T1 T)}
TypeOfE2 : {typeOf E2 T1}
ProgressClause : {value (abs Arg1 Arg2)}
============================
 progresses (app (abs Arg1 Arg2) E2)

Subgoal 2 is:
 progresses (app E1 E2)

Subgoal 3 is:
 progresses (app E1 E2)

progress_app < search.
Subgoal 2:

Variables: E1 E2 T T1
TypeOfE1 : {typeOf E1 (arrow T1 T)}
TypeOfE2 : {typeOf E2 T1}
ProgressClause : {error E1}
============================
 progresses (app E1 E2)

Subgoal 3 is:
 progresses (app E1 E2)

progress_app < search.
Subgoal 3:

Variables: E1 E2 T T1 E'
TypeOfE1 : {typeOf E1 (arrow T1 T)}
TypeOfE2 : {typeOf E2 T1}
ProgressClause : {step E1 E'}
============================
 progresses (app E1 E2)

progress_app < search.
Proof completed.

Abella < Theorem progress_excValue : 
forall T, {typeOf excValue T} -> progresses excValue.

============================
 forall T, {typeOf excValue T} -> progresses excValue

progress_excValue < search.
Proof completed.

Abella < Theorem progress_try : 
forall E1 E2 T, {typeOf (try E1 E2) T} -> progresses E1 ->
  progresses (try E1 E2).

============================
 forall E1 E2 T, {typeOf (try E1 E2) T} -> progresses E1 ->
   progresses (try E1 E2)

progress_try < intros Main PrgsE1.

Variables: E1 E2 T
Main : {typeOf (try E1 E2) T}
PrgsE1 : progresses E1
============================
 progresses (try E1 E2)

progress_try < case TypeOfE1 : Main.

Variables: E1 E2 T
PrgsE1 : progresses E1
TypeOfE1 : {typeOf E1 T}
TypeOfE2 : {typeOf E2 (arrow excType T)}
============================
 progresses (try E1 E2)

progress_try < case ProgressClause : PrgsE1.
Subgoal 1:

Variables: E1 E2 T
TypeOfE1 : {typeOf E1 T}
TypeOfE2 : {typeOf E2 (arrow excType T)}
ProgressClause : {value E1}
============================
 progresses (try E1 E2)

Subgoal 2 is:
 progresses (try E1 E2)

Subgoal 3 is:
 progresses (try E1 E2)

progress_try < search.
Subgoal 2:

Variables: E1 E2 T
TypeOfE1 : {typeOf E1 T}
TypeOfE2 : {typeOf E2 (arrow excType T)}
ProgressClause : {error E1}
============================
 progresses (try E1 E2)

Subgoal 3 is:
 progresses (try E1 E2)

progress_try < case ProgressClause.
Subgoal 2:

Variables: E2 T E3
TypeOfE1 : {typeOf (raise E3) T}
TypeOfE2 : {typeOf E2 (arrow excType T)}
H1 : {value E3}
============================
 progresses (try (raise E3) E2)

Subgoal 3 is:
 progresses (try E1 E2)

progress_try < search.
Subgoal 3:

Variables: E1 E2 T E'
TypeOfE1 : {typeOf E1 T}
TypeOfE2 : {typeOf E2 (arrow excType T)}
ProgressClause : {step E1 E'}
============================
 progresses (try E1 E2)

progress_try < search.
Proof completed.

Abella < Theorem progress_raise : 
forall E1 T, {typeOf (raise E1) T} -> progresses E1 -> progresses (raise E1).

============================
 forall E1 T, {typeOf (raise E1) T} -> progresses E1 -> progresses (raise E1)

progress_raise < intros Main PrgsE1.

Variables: E1 T
Main : {typeOf (raise E1) T}
PrgsE1 : progresses E1
============================
 progresses (raise E1)

progress_raise < case TypeOfE1 : Main.

Variables: E1 T
PrgsE1 : progresses E1
TypeOfE1 : {typeOf E1 excType}
============================
 progresses (raise E1)

progress_raise < case ProgressClause : PrgsE1.
Subgoal 1:

Variables: E1 T
TypeOfE1 : {typeOf E1 excType}
ProgressClause : {value E1}
============================
 progresses (raise E1)

Subgoal 2 is:
 progresses (raise E1)

Subgoal 3 is:
 progresses (raise E1)

progress_raise < search.
Subgoal 2:

Variables: E1 T
TypeOfE1 : {typeOf E1 excType}
ProgressClause : {error E1}
============================
 progresses (raise E1)

Subgoal 3 is:
 progresses (raise E1)

progress_raise < search.
Subgoal 3:

Variables: E1 T E'
TypeOfE1 : {typeOf E1 excType}
ProgressClause : {step E1 E'}
============================
 progresses (raise E1)

progress_raise < search.
Proof completed.

Abella < Theorem progress : 
forall E T, {typeOf E T} -> progresses E.

============================
 forall E T, {typeOf E T} -> progresses E

progress < induction on 1.

IH : forall E T, {typeOf E T}* -> progresses E
============================
 forall E T, {typeOf E T}@ -> progresses E

progress < intros Main.

Variables: E T
IH : forall E T, {typeOf E T}* -> progresses E
Main : {typeOf E T}@
============================
 progresses E

progress < case TypeOfE1 : Main.
Subgoal 1:

Variables: T2 R T1
IH : forall E T, {typeOf E T}* -> progresses E
TypeOfE1 : {typeOf n1 T1 |- typeOf (R n1) T2}*
============================
 progresses (abs R T1)

Subgoal 2 is:
 progresses excValue

Subgoal 3 is:
 progresses (app E1 E2)

Subgoal 4 is:
 progresses (try E1 E2)

Subgoal 5 is:
 progresses (raise E1)

progress < backchain progress_abs.
Subgoal 2:

IH : forall E T, {typeOf E T}* -> progresses E
============================
 progresses excValue

Subgoal 3 is:
 progresses (app E1 E2)

Subgoal 4 is:
 progresses (try E1 E2)

Subgoal 5 is:
 progresses (raise E1)

progress < backchain progress_excValue.
Subgoal 3:

Variables: T T1 E2 E1
IH : forall E T, {typeOf E T}* -> progresses E
TypeOfE1 : {typeOf E1 (arrow T1 T)}*
TypeOfE2 : {typeOf E2 T1}*
============================
 progresses (app E1 E2)

Subgoal 4 is:
 progresses (try E1 E2)

Subgoal 5 is:
 progresses (raise E1)

progress < apply IH to TypeOfE1.
Subgoal 3:

Variables: T T1 E2 E1
IH : forall E T, {typeOf E T}* -> progresses E
TypeOfE1 : {typeOf E1 (arrow T1 T)}*
TypeOfE2 : {typeOf E2 T1}*
H1 : progresses E1
============================
 progresses (app E1 E2)

Subgoal 4 is:
 progresses (try E1 E2)

Subgoal 5 is:
 progresses (raise E1)

progress < backchain progress_app.
Subgoal 4:

Variables: T E2 E1
IH : forall E T, {typeOf E T}* -> progresses E
TypeOfE1 : {typeOf E1 T}*
TypeOfE2 : {typeOf E2 (arrow excType T)}*
============================
 progresses (try E1 E2)

Subgoal 5 is:
 progresses (raise E1)

progress < apply IH to TypeOfE1.
Subgoal 4:

Variables: T E2 E1
IH : forall E T, {typeOf E T}* -> progresses E
TypeOfE1 : {typeOf E1 T}*
TypeOfE2 : {typeOf E2 (arrow excType T)}*
H1 : progresses E1
============================
 progresses (try E1 E2)

Subgoal 5 is:
 progresses (raise E1)

progress < backchain progress_try.
Subgoal 5:

Variables: T E1
IH : forall E T, {typeOf E T}* -> progresses E
TypeOfE1 : {typeOf E1 excType}*
============================
 progresses (raise E1)

progress < apply IH to TypeOfE1.
Subgoal 5:

Variables: T E1
IH : forall E T, {typeOf E T}* -> progresses E
TypeOfE1 : {typeOf E1 excType}*
H1 : progresses E1
============================
 progresses (raise E1)

progress < backchain progress_raise.
Proof completed.

Abella < Theorem preservation : 
forall E E' T, {typeOf E T} -> {step E E'} -> {typeOf E' T}.

============================
 forall E E' T, {typeOf E T} -> {step E E'} -> {typeOf E' T}

preservation < induction on 2.

IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
============================
 forall E E' T, {typeOf E T} -> {step E E'}@ -> {typeOf E' T}

preservation < intros TypeOf Main.

Variables: E E' T
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
TypeOf : {typeOf E T}
Main : {step E E'}@
============================
 {typeOf E' T}

preservation < case Step : Main.
Subgoal 1:

Variables: T EE R T1
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
TypeOf : {typeOf (app (abs R T1) EE) T}
============================
 {typeOf (R EE) T}

Subgoal 2 is:
 {typeOf E' T}

Subgoal 3 is:
 {typeOf (app E2 E1) T}

Subgoal 4 is:
 {typeOf (app E1' E2) T}

Subgoal 5 is:
 {typeOf (app E1 E2') T}

Subgoal 6 is:
 {typeOf (try E1' E2) T}

Subgoal 7 is:
 {typeOf (raise E1') T}

Subgoal 8 is:
 {typeOf E' T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < case Arg1_1 : TypeOf (keep).
Subgoal 1:

Variables: T EE R T1 T2
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
TypeOf : {typeOf (app (abs R T1) EE) T}
Arg1_1 : {typeOf (abs R T1) (arrow T2 T)}
Arg1_2 : {typeOf EE T2}
============================
 {typeOf (R EE) T}

Subgoal 2 is:
 {typeOf E' T}

Subgoal 3 is:
 {typeOf (app E2 E1) T}

Subgoal 4 is:
 {typeOf (app E1' E2) T}

Subgoal 5 is:
 {typeOf (app E1 E2') T}

Subgoal 6 is:
 {typeOf (try E1' E2) T}

Subgoal 7 is:
 {typeOf (raise E1') T}

Subgoal 8 is:
 {typeOf E' T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < case Arg2_1 : Arg1_1 (keep).
Subgoal 1:

Variables: T EE R T2
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
TypeOf : {typeOf (app (abs R T2) EE) T}
Arg1_1 : {typeOf (abs R T2) (arrow T2 T)}
Arg1_2 : {typeOf EE T2}
Arg2_1 : {typeOf n1 T2 |- typeOf (R n1) T}
============================
 {typeOf (R EE) T}

Subgoal 2 is:
 {typeOf E' T}

Subgoal 3 is:
 {typeOf (app E2 E1) T}

Subgoal 4 is:
 {typeOf (app E1' E2) T}

Subgoal 5 is:
 {typeOf (app E1 E2') T}

Subgoal 6 is:
 {typeOf (try E1' E2) T}

Subgoal 7 is:
 {typeOf (raise E1') T}

Subgoal 8 is:
 {typeOf E' T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < inst ToCut : Arg2_1 with n1 = EE.
Subgoal 1:

Variables: T EE R T2
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
TypeOf : {typeOf (app (abs R T2) EE) T}
Arg1_1 : {typeOf (abs R T2) (arrow T2 T)}
Arg1_2 : {typeOf EE T2}
Arg2_1 : {typeOf n1 T2 |- typeOf (R n1) T}
ToCut : {typeOf EE T2 |- typeOf (R EE) T}
============================
 {typeOf (R EE) T}

Subgoal 2 is:
 {typeOf E' T}

Subgoal 3 is:
 {typeOf (app E2 E1) T}

Subgoal 4 is:
 {typeOf (app E1' E2) T}

Subgoal 5 is:
 {typeOf (app E1 E2') T}

Subgoal 6 is:
 {typeOf (try E1' E2) T}

Subgoal 7 is:
 {typeOf (raise E1') T}

Subgoal 8 is:
 {typeOf E' T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < cut ToCut with Arg1_2.
Subgoal 1:

Variables: T EE R T2
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
TypeOf : {typeOf (app (abs R T2) EE) T}
Arg1_1 : {typeOf (abs R T2) (arrow T2 T)}
Arg1_2 : {typeOf EE T2}
Arg2_1 : {typeOf n1 T2 |- typeOf (R n1) T}
ToCut : {typeOf EE T2 |- typeOf (R EE) T}
H1 : {typeOf (R EE) T}
============================
 {typeOf (R EE) T}

Subgoal 2 is:
 {typeOf E' T}

Subgoal 3 is:
 {typeOf (app E2 E1) T}

Subgoal 4 is:
 {typeOf (app E1' E2) T}

Subgoal 5 is:
 {typeOf (app E1 E2') T}

Subgoal 6 is:
 {typeOf (try E1' E2) T}

Subgoal 7 is:
 {typeOf (raise E1') T}

Subgoal 8 is:
 {typeOf E' T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < search.
Subgoal 2:

Variables: E' T E2
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
TypeOf : {typeOf (try E' E2) T}
Step : {value E'}*
============================
 {typeOf E' T}

Subgoal 3 is:
 {typeOf (app E2 E1) T}

Subgoal 4 is:
 {typeOf (app E1' E2) T}

Subgoal 5 is:
 {typeOf (app E1 E2') T}

Subgoal 6 is:
 {typeOf (try E1' E2) T}

Subgoal 7 is:
 {typeOf (raise E1') T}

Subgoal 8 is:
 {typeOf E' T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < case Arg1_1 : TypeOf (keep).
Subgoal 2:

Variables: E' T E2
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
TypeOf : {typeOf (try E' E2) T}
Step : {value E'}*
Arg1_1 : {typeOf E' T}
Arg1_2 : {typeOf E2 (arrow excType T)}
============================
 {typeOf E' T}

Subgoal 3 is:
 {typeOf (app E2 E1) T}

Subgoal 4 is:
 {typeOf (app E1' E2) T}

Subgoal 5 is:
 {typeOf (app E1 E2') T}

Subgoal 6 is:
 {typeOf (try E1' E2) T}

Subgoal 7 is:
 {typeOf (raise E1') T}

Subgoal 8 is:
 {typeOf E' T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < search.
Subgoal 3:

Variables: T E1 E2
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
TypeOf : {typeOf (try (raise E1) E2) T}
============================
 {typeOf (app E2 E1) T}

Subgoal 4 is:
 {typeOf (app E1' E2) T}

Subgoal 5 is:
 {typeOf (app E1 E2') T}

Subgoal 6 is:
 {typeOf (try E1' E2) T}

Subgoal 7 is:
 {typeOf (raise E1') T}

Subgoal 8 is:
 {typeOf E' T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < case Arg1_1 : TypeOf (keep).
Subgoal 3:

Variables: T E1 E2
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
TypeOf : {typeOf (try (raise E1) E2) T}
Arg1_1 : {typeOf (raise E1) T}
Arg1_2 : {typeOf E2 (arrow excType T)}
============================
 {typeOf (app E2 E1) T}

Subgoal 4 is:
 {typeOf (app E1' E2) T}

Subgoal 5 is:
 {typeOf (app E1 E2') T}

Subgoal 6 is:
 {typeOf (try E1' E2) T}

Subgoal 7 is:
 {typeOf (raise E1') T}

Subgoal 8 is:
 {typeOf E' T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < case Arg2_1 : Arg1_1 (keep).
Subgoal 3:

Variables: T E1 E2
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
TypeOf : {typeOf (try (raise E1) E2) T}
Arg1_1 : {typeOf (raise E1) T}
Arg1_2 : {typeOf E2 (arrow excType T)}
Arg2_1 : {typeOf E1 excType}
============================
 {typeOf (app E2 E1) T}

Subgoal 4 is:
 {typeOf (app E1' E2) T}

Subgoal 5 is:
 {typeOf (app E1 E2') T}

Subgoal 6 is:
 {typeOf (try E1' E2) T}

Subgoal 7 is:
 {typeOf (raise E1') T}

Subgoal 8 is:
 {typeOf E' T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < search.
Subgoal 4:

Variables: T E1' E1 E2
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
TypeOf : {typeOf (app E1 E2) T}
Step : {step E1 E1'}*
============================
 {typeOf (app E1' E2) T}

Subgoal 5 is:
 {typeOf (app E1 E2') T}

Subgoal 6 is:
 {typeOf (try E1' E2) T}

Subgoal 7 is:
 {typeOf (raise E1') T}

Subgoal 8 is:
 {typeOf E' T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < case TypeOf1 : TypeOf.
Subgoal 4:

Variables: T E1' E1 E2 T1
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
Step : {step E1 E1'}*
TypeOf1 : {typeOf E1 (arrow T1 T)}
TypeOf2 : {typeOf E2 T1}
============================
 {typeOf (app E1' E2) T}

Subgoal 5 is:
 {typeOf (app E1 E2') T}

Subgoal 6 is:
 {typeOf (try E1' E2) T}

Subgoal 7 is:
 {typeOf (raise E1') T}

Subgoal 8 is:
 {typeOf E' T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < apply IH to TypeOf1 Step.
Subgoal 4:

Variables: T E1' E1 E2 T1
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
Step : {step E1 E1'}*
TypeOf1 : {typeOf E1 (arrow T1 T)}
TypeOf2 : {typeOf E2 T1}
H1 : {typeOf E1' (arrow T1 T)}
============================
 {typeOf (app E1' E2) T}

Subgoal 5 is:
 {typeOf (app E1 E2') T}

Subgoal 6 is:
 {typeOf (try E1' E2) T}

Subgoal 7 is:
 {typeOf (raise E1') T}

Subgoal 8 is:
 {typeOf E' T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < search.
Subgoal 5:

Variables: T E2' E2 E1
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
TypeOf : {typeOf (app E1 E2) T}
Step : {step E2 E2'}*
============================
 {typeOf (app E1 E2') T}

Subgoal 6 is:
 {typeOf (try E1' E2) T}

Subgoal 7 is:
 {typeOf (raise E1') T}

Subgoal 8 is:
 {typeOf E' T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < case TypeOf1 : TypeOf.
Subgoal 5:

Variables: T E2' E2 E1 T1
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
Step : {step E2 E2'}*
TypeOf1 : {typeOf E1 (arrow T1 T)}
TypeOf2 : {typeOf E2 T1}
============================
 {typeOf (app E1 E2') T}

Subgoal 6 is:
 {typeOf (try E1' E2) T}

Subgoal 7 is:
 {typeOf (raise E1') T}

Subgoal 8 is:
 {typeOf E' T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < apply IH to TypeOf2 Step.
Subgoal 5:

Variables: T E2' E2 E1 T1
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
Step : {step E2 E2'}*
TypeOf1 : {typeOf E1 (arrow T1 T)}
TypeOf2 : {typeOf E2 T1}
H1 : {typeOf E2' T1}
============================
 {typeOf (app E1 E2') T}

Subgoal 6 is:
 {typeOf (try E1' E2) T}

Subgoal 7 is:
 {typeOf (raise E1') T}

Subgoal 8 is:
 {typeOf E' T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < search.
Subgoal 6:

Variables: T E1' E1 E2
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
TypeOf : {typeOf (try E1 E2) T}
Step : {step E1 E1'}*
============================
 {typeOf (try E1' E2) T}

Subgoal 7 is:
 {typeOf (raise E1') T}

Subgoal 8 is:
 {typeOf E' T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < case TypeOf1 : TypeOf.
Subgoal 6:

Variables: T E1' E1 E2
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
Step : {step E1 E1'}*
TypeOf1 : {typeOf E1 T}
TypeOf2 : {typeOf E2 (arrow excType T)}
============================
 {typeOf (try E1' E2) T}

Subgoal 7 is:
 {typeOf (raise E1') T}

Subgoal 8 is:
 {typeOf E' T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < apply IH to TypeOf1 Step.
Subgoal 6:

Variables: T E1' E1 E2
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
Step : {step E1 E1'}*
TypeOf1 : {typeOf E1 T}
TypeOf2 : {typeOf E2 (arrow excType T)}
H1 : {typeOf E1' T}
============================
 {typeOf (try E1' E2) T}

Subgoal 7 is:
 {typeOf (raise E1') T}

Subgoal 8 is:
 {typeOf E' T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < search.
Subgoal 7:

Variables: T E1' E1
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
TypeOf : {typeOf (raise E1) T}
Step : {step E1 E1'}*
============================
 {typeOf (raise E1') T}

Subgoal 8 is:
 {typeOf E' T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < case TypeOf1 : TypeOf.
Subgoal 7:

Variables: T E1' E1
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
Step : {step E1 E1'}*
TypeOf1 : {typeOf E1 excType}
============================
 {typeOf (raise E1') T}

Subgoal 8 is:
 {typeOf E' T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < apply IH to TypeOf1 Step.
Subgoal 7:

Variables: T E1' E1
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
Step : {step E1 E1'}*
TypeOf1 : {typeOf E1 excType}
H1 : {typeOf E1' excType}
============================
 {typeOf (raise E1') T}

Subgoal 8 is:
 {typeOf E' T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < search.
Subgoal 8:

Variables: E' T E2
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
TypeOf : {typeOf (app E' E2) T}
Step : {error E'}*
============================
 {typeOf E' T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < case Step.
Subgoal 8:

Variables: T E2 E1
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
TypeOf : {typeOf (app (raise E1) E2) T}
H1 : {value E1}*
============================
 {typeOf (raise E1) T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < case TypeOf1 : TypeOf.
Subgoal 8:

Variables: T E2 E1 T1
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
H1 : {value E1}*
TypeOf1 : {typeOf (raise E1) (arrow T1 T)}
TypeOf2 : {typeOf E2 T1}
============================
 {typeOf (raise E1) T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < case TypeOf1.
Subgoal 8:

Variables: T E2 E1 T1
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
H1 : {value E1}*
TypeOf2 : {typeOf E2 T1}
H2 : {typeOf E1 excType}
============================
 {typeOf (raise E1) T}

Subgoal 9 is:
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < search.
Subgoal 9:

Variables: E' T E1
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
TypeOf : {typeOf (app E1 E') T}
Step : {error E'}*
============================
 {typeOf E' T}

Subgoal 10 is:
 {typeOf E' T}

preservation < case Step.
Subgoal 9:

Variables: T E1 E2
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
TypeOf : {typeOf (app E1 (raise E2)) T}
H1 : {value E2}*
============================
 {typeOf (raise E2) T}

Subgoal 10 is:
 {typeOf E' T}

preservation < case TypeOf1 : TypeOf.
Subgoal 9:

Variables: T E1 E2 T1
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
H1 : {value E2}*
TypeOf1 : {typeOf E1 (arrow T1 T)}
TypeOf2 : {typeOf (raise E2) T1}
============================
 {typeOf (raise E2) T}

Subgoal 10 is:
 {typeOf E' T}

preservation < case TypeOf2.
Subgoal 9:

Variables: T E1 E2 T1
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
H1 : {value E2}*
TypeOf1 : {typeOf E1 (arrow T1 T)}
H2 : {typeOf E2 excType}
============================
 {typeOf (raise E2) T}

Subgoal 10 is:
 {typeOf E' T}

preservation < search.
Subgoal 10:

Variables: E' T
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
TypeOf : {typeOf (raise E') T}
Step : {error E'}*
============================
 {typeOf E' T}

preservation < case Step.
Subgoal 10:

Variables: T E1
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
TypeOf : {typeOf (raise (raise E1)) T}
H1 : {value E1}*
============================
 {typeOf (raise E1) T}

preservation < case TypeOf1 : TypeOf.
Subgoal 10:

Variables: T E1
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
H1 : {value E1}*
TypeOf1 : {typeOf (raise E1) excType}
============================
 {typeOf (raise E1) T}

preservation < case TypeOf1.
Subgoal 10:

Variables: T E1
IH : forall E E' T, {typeOf E T} -> {step E E'}* -> {typeOf E' T}
H1 : {value E1}*
H2 : {typeOf E1 excType}
============================
 {typeOf (raise E1) T}

preservation < search.
Proof completed.

Abella < Theorem type_soundness : 
forall E E' T, {typeOf E T} -> {nstep E E'} -> progresses E'.

============================
 forall E E' T, {typeOf E T} -> {nstep E E'} -> progresses E'

type_soundness < induction on 2.

IH : forall E E' T, {typeOf E T} -> {nstep E E'}* -> progresses E'
============================
 forall E E' T, {typeOf E T} -> {nstep E E'}@ -> progresses E'

type_soundness < intros Main NStep.

Variables: E E' T
IH : forall E E' T, {typeOf E T} -> {nstep E E'}* -> progresses E'
Main : {typeOf E T}
NStep : {nstep E E'}@
============================
 progresses E'

type_soundness < case Step1 : NStep.
Subgoal 1:

Variables: E' T
IH : forall E E' T, {typeOf E T} -> {nstep E E'}* -> progresses E'
Main : {typeOf E' T}
============================
 progresses E'

Subgoal 2 is:
 progresses E'

type_soundness < backchain progress.
Subgoal 2:

Variables: E E' T E2
IH : forall E E' T, {typeOf E T} -> {nstep E E'}* -> progresses E'
Main : {typeOf E T}
Step1 : {step E E2}*
Step2 : {nstep E2 E'}*
============================
 progresses E'

type_soundness < apply TypeOfE2 : preservation to Main Step1.
Subgoal 2:

Variables: E E' T E2
IH : forall E E' T, {typeOf E T} -> {nstep E E'}* -> progresses E'
Main : {typeOf E T}
Step1 : {step E E2}*
Step2 : {nstep E2 E'}*
TypeOfE2 : {typeOf E2 T}
============================
 progresses E'

type_soundness < backchain IH with E = E2.
Proof completed.

Abella < Goodbye.

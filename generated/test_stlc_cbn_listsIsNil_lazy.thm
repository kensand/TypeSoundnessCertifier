Specification "stlc_cbn_listsIsNil_lazy".

Define test_beta : prop by
   test_beta := forall T T1 R EE T2, {typeOf (abs R T) (arrow T1 T2)} -> {typeOf EE T1} -> {typeOf (R EE) T2} -> {typeOf (R EE) T2}.

Define test_headStepEmpty : prop by
   test_headStepEmpty := forall T, {typeOf (emptyList ) (list T)} -> {typeOf (myError ) T}.

Define test_headStepCons : prop by
   test_headStepCons := forall E1 E2 T, {typeOf (cons E1 E2) (list T)} -> {typeOf E1 T} -> {typeOf E2 (list T)} -> {typeOf E1 T}.

Define test_tailStepEmpty : prop by
   test_tailStepEmpty := forall T, {typeOf (emptyList ) (list T)} -> {typeOf (myError ) (list T)}.

Define test_tailStepCons : prop by
   test_tailStepCons := forall E1 E2 T, {typeOf (cons E1 E2) (list T)} -> {typeOf E1 T} -> {typeOf E2 (list T)} -> {typeOf E2 (list T)}.

Define test_isnilStepEmpty : prop by
   test_isnilStepEmpty := forall T, {typeOf (emptyList ) (list T)} -> {typeOf (tt ) (bool )}.

Define test_isnilStepCons : prop by
   test_isnilStepCons := forall E1 E2 T, {typeOf (cons E1 E2) (list T)} -> {typeOf E1 T} -> {typeOf E2 (list T)} -> {typeOf (ff ) (bool )}.

Define test_conditional_true : prop by
   test_conditional_true := forall E1 E2 T, {typeOf (tt ) (bool )} -> {typeOf E1 T} -> {typeOf E2 T} -> {typeOf E1 T}.

Define test_conditional_false : prop by
   test_conditional_false := forall E1 E2 T, {typeOf (ff ) (bool )} -> {typeOf E1 T} -> {typeOf E2 T} -> {typeOf E2 T}.



pair superlazy: values are pair E E. no reductions under pairs.
pair lazy: values are pair E E. parallel reduction for pairs. (another name would be better)
pair plain: values are pair V V. parallel reduction for pairs. (another name would be better)
pairs_onlyfstButBoth : values are pair V E. parallel reduction for pairs.
where is strict evaluation for pairs???

iff: if C e e.
lists : cons

lists_lazy : cons E E. reduction in head and tail. 

listsIsNil: 
% context cons C e.
% context cons v C.
% context head C.
% context tail C.
% context isnil C.
% context if C e e.

listsIsNil_lazy:
% context head C.
% context tail C.
% context isnil C.
% context if C e e.

sums:
value (inl E1) :- value E1.
value (inr E1) :- value E1.

tuples_lazy:
value tuple E E E E E .. and context select_i C

tuples_parallelL value: tuple V V V  V V.  and parallel for tuple. and select_i C
% context tuple5 C e e e e.
% context tuple5 e C e e e.
% context tuple5 e e C e e.
% context tuple5 e e e C e.
% context tuple5 e e e e C.
% context select1 C.
% context select2 C.
% context select3 C.
% context select4 C.
% context select5 C.

tuples_plain value: tuple V V V  V V. and context tuple5 is strict. 

forall: 
% context appT C e.

recursive:
value (fold E1 U2) :- value E1.
% context fold C.
% context unfold C.

stlc_if_par means:
% context if C e e.
% context if e C e.
% context if e e C.

